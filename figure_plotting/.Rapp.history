dpath="~/gitreps/pungitius_sex_chromosome/gene_trees/pre_Y_inference"
dat = read.table('chrXII_biggest_monophyletic_results.tsv')
dpath="~/gitreps/pungitius_sex_chromosome/gene_trees/pre_Y_inference"
dat = read.table('chrXII_biggest_monophyletic_results.tsv')
dpath="~/gitreps/pungitius_sex_chromosome/gene_trees/pre_Y_inference/"
dat = read.table('chrXII_biggest_monophyletic_results.tsv')
dpath="~/gitreps/pungitius_sex_chromosome/gene_trees/pre_Y_inference/"
getwd()
setwd("~/gitreps/pungitius_sex_chromosome/gene_trees/pre_Y_inference/")
dat = read.table('chrXII_biggest_monophyletic_results.tsv')
head(dat)
dat = read.table('chrXII_biggest_monophyletic_results.tsv', header = T)
dat = read.table('chrXII_biggest_monophyletic_results.tsv', header = T)
head(dat)
plot(as.numeric(dat$SDRbool) ~ dat$BIN_START)
sex='male'
spp = 'pun'
setwd("~/gitreps/pungitius_sex_chromosome/gene_trees/pre_Y_inference/")
sex='male'
spp = 'pun'
infile = paste(paste(spp, sex, sep="_"), 'allBiggestMonoRes.tsv', sep="_")
infile
print(infile)
dat = read.table(infile, header = T)
head(dat)
dat = read.table(infile, header = T)
head(dat)
#ADD NORMALIZED X VALUES#
head(dat)#
dat$norm.x = dat$BIN_START#
for (chr in chromlist){#
	len = max(dat$BIN_START[dat$CHROM==chr])#
	dat$norm.x[dat$CHROM==chr]<-dat$BIN_START[dat$CHROM==chr] / len#
}#
head(dat)
ll=load("~/gitreps/pungitius_sex_chromosome/metadata/chromList.Rdata")
ll
head(cdat)
rm(list=ls())
#chrom_window_figures.R#
library(plotrix)#
library(ggplot2)#
library(gridExtra)#
library(cowplot)#
#
#set global variables for script#
setwd("~/gitreps/pungitius_sex_chromosome/male_female_comparisons")#
source("~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R")#
resDir = "dna_100Kb_window_results/"#
chromsToIgnore = c("chrUn", "chrM")#
male.color = 'dodgerblue'#
female.color = 'firebrick'
spp="pun"
#upload the VCF wrapper results#
wrapFile = paste(paste(resDir, spp, sep = ""), "allWindows.tsv", sep="_")#
dat = read.table(wrapFile, header=T, sep="\t", na.strings = c("NA", "no_snps_in_this_window"))#
dat=dat[!dat$CHROM %in% chromsToIgnore,]#
dat$mb = dat$BIN_START / 1e6#
head(dat)#
dim(dat)#
dat$chr_pos = paste(dat$CHROM, dat$BIN_START, sep="_")#
dat$mfPi = log( (dat$SNP_COUNT_male/dat$SNP_COUNT_female), 2)#
dat$fmPi = log( (dat$PI_female/dat$PI_male), 2)#
dat$mfDens = log( (dat$SNP_COUNT_male/dat$SNP_COUNT_female), 2)#
dat$fmDens = log( (dat$SNP_COUNT_female/dat$SNP_COUNT_male), 2)#
dat$pctFemaleSpecific = dat$pFemaleSpecific*100#
dat$pctMaleSpecific = dat$pMaleSpecific*100#
#SET UP NUMBERED CHROMOSOMES#
chroms = unique(as.character(dat$CHROM))#
chroms = chroms[!chroms %in% c("chrM", "chrUn")]#
chroms = chroms[order(chroms)]#
nums = c(1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 19, 15, 16, 17, 18, 20, 21)#
cdat = data.frame(chroms, nums)#
cdat=cdat[order(cdat$nums),]#
print(cdat)#
chromlist = as.character(cdat$chroms)#
save(cdat, chromlist, file="~/gitreps/pungitius_sex_chromosome/metadata/chromList.Rdata")
rm(list=ls())
ll=load("~/gitreps/pungitius_sex_chromosome/metadata/chromList.Rdata")
ll
head(dat)#
dat$norm.x = dat$BIN_START#
for (chr in chromlist){#
	len = max(dat$BIN_START[dat$CHROM==chr])#
	dat$norm.x[dat$CHROM==chr]<-dat$BIN_START[dat$CHROM==chr] / len#
}#
head(dat)
#y_consistent_trees.R#
#examine phylogenetic results looking gene trees consistent with sex chromosomes#
#
setwd("~/gitreps/pungitius_sex_chromosome/gene_trees/pre_Y_inference/")#
source("~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R")#
#
#MAKE SELECTIONS FOR WHICH SPECIES/SEX TO ANALYZE#
#
#pick the sex (male means looking for Ys, female for Ws)#
sex='female'#
sex='male'#
#
#pick the species you want to look at#
spp = 'po'#
spp = 'tym'#
spp = 'sin'#
spp = 'pun'#
#
infile = paste(paste(spp, sex, sep="_"), 'allBiggestMonoRes.tsv', sep="_")#
print(infile)
#examine phylogenetic results looking gene trees consistent with sex chromosomes#
#
setwd("~/gitreps/pungitius_sex_chromosome/gene_trees/pre_Y_inference/")#
source("~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R")#
#
#MAKE SELECTIONS FOR WHICH SPECIES/SEX TO ANALYZE#
#
#pick the sex (male means looking for Ys, female for Ws)#
sex='female'#
sex='male'#
#
#pick the species you want to look at#
spp = 'po'#
spp = 'tym'#
spp = 'sin'#
spp = 'pun'#
#
#set up name#
infile = paste(paste(spp, sex, sep="_"), 'allBiggestMonoRes.tsv', sep="_")#
print(infile)#
#
#read in data#
dat = read.table(infile, header = T)#
head(dat)#
#
#add normalized X values#
#
ll=load("~/gitreps/pungitius_sex_chromosome/metadata/chromList.Rdata")#
head(dat)#
dat$norm.x = dat$BIN_START#
for (chr in chromlist){#
	len = max(dat$BIN_START[dat$CHROM==chr])#
	dat$norm.x[dat$CHROM==chr]<-dat$BIN_START[dat$CHROM==chr] / len#
}#
head(dat)
#--------------- plot multipanel scatterplots ---------------##
x=dat$BIN_START#
dat$BIN_START = x/1e6#
CUT = 0.99#
plot_multipanel_chroms(df0=dat, chromlist=chromlist, xcol='BIN_START', ycol='biggestMonoPhyletic', float= CUT, xlab="Position", ylab='Density Male-specific')
sex='female'
#set up name#
infile = paste(paste(spp, sex, sep="_"), 'allBiggestMonoRes.tsv', sep="_")#
print(infile)#
#
#read in data#
dat = read.table(infile, header = T)#
head(dat)#
#
#add normalized X values#
#
ll=load("~/gitreps/pungitius_sex_chromosome/metadata/chromList.Rdata")#
head(dat)#
dat$norm.x = dat$BIN_START#
for (chr in chromlist){#
	len = max(dat$BIN_START[dat$CHROM==chr])#
	dat$norm.x[dat$CHROM==chr]<-dat$BIN_START[dat$CHROM==chr] / len#
}#
head(dat)
#--------------- plot multipanel scatterplots ---------------##
x=dat$BIN_START#
dat$BIN_START = x/1e6#
CUT = 0.99#
plot_multipanel_chroms(df0=dat, chromlist=chromlist, xcol='BIN_START', ycol='biggestMonoPhyletic', float= CUT, xlab="Position", ylab='Density Male-specific')
spp = 'tym'
sex='female'
#set up name#
infile = paste(paste(spp, sex, sep="_"), 'allBiggestMonoRes.tsv', sep="_")#
print(infile)#
#
#read in data#
dat = read.table(infile, header = T)#
head(dat)#
#
#add normalized X values#
#
ll=load("~/gitreps/pungitius_sex_chromosome/metadata/chromList.Rdata")#
head(dat)#
dat$norm.x = dat$BIN_START#
for (chr in chromlist){#
	len = max(dat$BIN_START[dat$CHROM==chr])#
	dat$norm.x[dat$CHROM==chr]<-dat$BIN_START[dat$CHROM==chr] / len#
}#
head(dat)
#--------------- plot multipanel scatterplots ---------------##
x=dat$BIN_START#
dat$BIN_START = x/1e6#
CUT = 0.99#
plot_multipanel_chroms(df0=dat, chromlist=chromlist, xcol='BIN_START', ycol='biggestMonoPhyletic', float= CUT, xlab="Position", ylab='Density Male-specific')
dat$sexCon = as.numeric(dat$SDRbool)
plot_multipanel_chroms(df0=dat, chromlist=chromlist, xcol='BIN_START', ycol='sexCon', float= CUT, xlab="Position", ylab='Density Male-specific')
head(dat)
sex='male'
spp = 'pun'#
#
#set up name#
infile = paste(paste(spp, sex, sep="_"), 'allBiggestMonoRes.tsv', sep="_")#
print(infile)#
#
#read in data#
dat = read.table(infile, header = T)#
head(dat)#
#
#add normalized X values#
#
ll=load("~/gitreps/pungitius_sex_chromosome/metadata/chromList.Rdata")#
head(dat)#
dat$norm.x = dat$BIN_START#
for (chr in chromlist){#
	len = max(dat$BIN_START[dat$CHROM==chr])#
	dat$norm.x[dat$CHROM==chr]<-dat$BIN_START[dat$CHROM==chr] / len#
}#
head(dat)#
#
#add numerics for sex chromosome consistent#
dat$sexCon = as.numeric(dat$SDRbool)
plot_multipanel_chroms(df0=dat, chromlist=chromlist, xcol='BIN_START', ycol='sexCon', float= CUT, xlab="Position", ylab='Density Male-specific')
spp = 'sin'
sex='female'
#set up name#
infile = paste(paste(spp, sex, sep="_"), 'allBiggestMonoRes.tsv', sep="_")#
print(infile)#
#
#read in data#
dat = read.table(infile, header = T)#
head(dat)#
#
#add normalized X values#
#
ll=load("~/gitreps/pungitius_sex_chromosome/metadata/chromList.Rdata")#
head(dat)#
dat$norm.x = dat$BIN_START#
for (chr in chromlist){#
	len = max(dat$BIN_START[dat$CHROM==chr])#
	dat$norm.x[dat$CHROM==chr]<-dat$BIN_START[dat$CHROM==chr] / len#
}#
head(dat)#
#
#add numerics for sex chromosome consistent#
dat$sexCon = as.numeric(dat$SDRbool)#
#
#--------------- plot multipanel scatterplots ---------------##
x=dat$BIN_START#
dat$BIN_START = x/1e6#
CUT = 0.99#
plot_multipanel_chroms(df0=dat, chromlist=chromlist, xcol='BIN_START', ycol='biggestMonoPhyletic', float= CUT, xlab="Position", ylab='Density Male-specific')
plot_multipanel_chroms(df0=dat, chromlist=chromlist, xcol='BIN_START', ycol='sexCon', float= CUT, xlab="Position", ylab='Density Male-specific')
spp
outName = 'gitreps/pungitius_sex_chromosome/figure_plotting/pun_Ylike.Rdata'
rm(list=ls())
#examine phylogenetic results looking gene trees consistent with sex chromosomes#
#
setwd("~/gitreps/pungitius_sex_chromosome/gene_trees/pre_Y_inference/")#
source("~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R")#
#
#MAKE SELECTIONS FOR WHICH SPECIES/SEX TO ANALYZE#
#
#pick the sex (male means looking for Ys, female for Ws)#
sex='female'#
sex='male'#
#
#pick the species you want to look at#
spp = 'po'#
spp = 'tym'#
spp = 'sin'#
spp = 'pun'#
#
#set up name#
infile = paste(paste(spp, sex, sep="_"), 'allBiggestMonoRes.tsv', sep="_")#
print(infile)#
#
#read in data#
dat = read.table(infile, header = T)#
head(dat)#
#
#add normalized X values#
#
ll=load("~/gitreps/pungitius_sex_chromosome/metadata/chromList.Rdata")#
head(dat)#
dat$norm.x = dat$BIN_START#
for (chr in chromlist){#
	len = max(dat$BIN_START[dat$CHROM==chr])#
	dat$norm.x[dat$CHROM==chr]<-dat$BIN_START[dat$CHROM==chr] / len#
}#
head(dat)#
#
#add numerics for sex chromosome consistent#
dat$sexCon = as.numeric(dat$SDRbool)#
#--------------- plot multipanel scatterplots ---------------
#SAVE THE RESULTS FOR PLOTTING MAIN FIGURE#
outName = 'gitreps/pungitius_sex_chromosome/figure_plotting/pun_Ylike.Rdata'#
if (spp='pun'){#
	save(dat, file=outName)#
}
outName = 'gitreps/pungitius_sex_chromosome/figure_plotting/pun_Ylike.Rdata'
if (spp='pun'){#
	save(dat, file=outName)#
}
outName = '~/gitreps/pungitius_sex_chromosome/figure_plotting/pun_Ylike.Rdata'
if (spp='pun'){#
	save(dat, file=outName)#
}
if (spp=='pun'){#
	save(dat, file=outName)#
}
if (spp=='pun'){#
	save(dat, file=outName)#
}
rm(list=ls())
setwd("~/gitreps/pungitius_sex_chromosome/figure_plotting")
source('~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R')
#------------ plot gene tree figure ------------##
#
#PLOT SDR-LIKE BOOLEAN DATA#
ll=load("pun_Ylike.Rdata");SEX.CHROM = 'chrXII' #set this up with chrom_window_figuresV4_wrapped.R
bm = sdr_normalized(df=dat, xcol='norm.x', ycol='m.sdrBool', sex.chrom= SEX.CHROM, YLAB="Y-consistent", sex.col ='black', other.col ='grey',LWD=0.5,PT.SIZE = 2, SHAPE=3, SPAN=.2, draw.legend=T)
head(dat)
bm = sdr_normalized(df=dat, xcol='norm.x', ycol='SDRbool', sex.chrom= SEX.CHROM, YLAB="Y-consistent", sex.col ='black', other.col ='grey',LWD=0.5,PT.SIZE = 2, SHAPE=3, SPAN=.2, draw.legend=T)
dat$mb = dat$BIN_START / 1e6
bm = sdr_normalized(df=dat, xcol='norm.x', ycol='SDRbool', sex.chrom= SEX.CHROM, YLAB="Y-consistent", sex.col ='black', other.col ='grey',LWD=0.5,PT.SIZE = 2, SHAPE=3, SPAN=.2, draw.legend=T)
#add breaktpoints#
norm.breaks = c(3.5, 18.9) / tot.length#
bm=bm + geom_vline(xintercept= norm.breaks[1], lty=2, lwd=0.5, color='green') + #
	geom_vline(xintercept= norm.breaks[2], lty=2, lwd=0.5,color='green')
tot.length = max(dat[dat$CHROM=='chrXII','mb'])
norm.breaks = c(3.5, 18.9) / tot.length
bm = sdr_normalized(df=dat, xcol='norm.x', ycol='SDRbool', sex.chrom= SEX.CHROM, YLAB="Y-consistent", sex.col ='black', other.col ='grey',LWD=0.5,PT.SIZE = 2, SHAPE=3, SPAN=.2, draw.legend=T)#
tot.length = max(dat[dat$CHROM=='chrXII','mb'])#
#
#add breaktpoints#
norm.breaks = c(3.5, 18.9) / tot.length#
bm=bm + geom_vline(xintercept= norm.breaks[1], lty=2, lwd=0.5, color='green') + #
	geom_vline(xintercept= norm.breaks[2], lty=2, lwd=0.5,color='green')
#set up coordinates for example trees#
mx=max(dat$mb[dat$CHROM=='chrXII'])#
Y1=c(0,0,1,1)#
Y2=c(0.05,0.05,0.95,0.95)#
labY = c(0.15,0.15,0.85,0.85)#
labX = c(0.8, 2, 6.6, 14.7)/mx#
lefts = c(1.1, 2, 6.6, 14.7)/mx#
rights = c(1.2, 2.1, 6.7, 14.8)/mx#
tlabs = c("B", "C", "D", "E")#
tree.segs = data.frame(x1=lefts, x2=rights, y1=Y2, y2=Y2, tlab=tlabs, labY=labY, labX=labX)#
# bm = bm + geom_segment(data=tree.segs, aes(x = x1, y = y1, xend = x2, yend = y2), lwd=4) +#
	# geom_text(data=tree.segs, aes(x = labX, y = labY, xend = x2, yend = labY, label=tlab), size=5)#
plot(bm)#
head(dat)
g = ggplot(data=dat, aes(x=BIN_START, y=BIN_END)) +#
	geom_point() +#
	geom_segment(data= test.df, aes(x = x1, y = y1, xend = x2, yend = y2), lwd=5)#
plot(g)
test.df = data.frame(x1=1e7, x2=2e7, y1=1e7, y2=1e7)#
g = ggplot(data=dat, aes(x=BIN_START, y=BIN_END)) +#
	geom_point() +#
	geom_segment(data= test.df, aes(x = x1, y = y1, xend = x2, yend = y2), lwd=5)#
plot(g)
bm = sdr_normalized(df=dat, xcol='norm.x', ycol='SDRbool', sex.chrom= SEX.CHROM, YLAB="Y-consistent", sex.col ='black', other.col ='grey',LWD=0.5,PT.SIZE = 2, SHAPE=3, SPAN=.2, draw.legend=T)#
tot.length = max(dat[dat$CHROM=='chrXII','mb'])#
#
#add breaktpoints#
norm.breaks = c(3.5, 18.9) / tot.length#
bm=bm + geom_vline(xintercept= norm.breaks[1], lty=2, lwd=0.5, color='green') + #
	geom_vline(xintercept= norm.breaks[2], lty=2, lwd=0.5,color='green')
plot(bm)
head(dat)
rm(list=ls())
#plot_fig2.R#
#
setwd("~/gitreps/stickle_back_sex_chromosomes")#
source('scripts/pun_sex_chrom_functions.R')#
source("~/gitreps/stickle_back_sex_chromosomes/scripts/twisst_plotting_functions.R")#
library(ggplot2)#
library(cowplot)#
#------------ plot gene tree figure ------------##
#
#PLOT SDR-LIKE BOOLEAN DATA#
ll=load("datasets/pun_Ylike.Rdata");SEX.CHROM = 'chrXII' #set this up with chrom_window_figuresV4_wrapped.R
ll=load("datasets/pun_assembledWindowStats.Rdata");SEX.CHROM = 'chrXII' #set this up with chrom_window_figuresV4_wrapped.R
ll
head(dat)
bm = sdr_normalized(df=dat, xcol='norm.x', ycol='m.sdrBool', sex.chrom= SEX.CHROM, YLAB="Y-consistent", sex.col ='black', other.col ='grey',LWD=0.5,PT.SIZE = 2, SHAPE=3, SPAN=.2, draw.legend=T)#
tot.length = max(dat[dat$CHROM=='chrXII','mb'])
#add breaktpoints#
norm.breaks = c(3.5, 18.9) / tot.length#
bm=bm + geom_vline(xintercept= norm.breaks[1], lty=2, lwd=0.5, color='green') + #
	geom_vline(xintercept= norm.breaks[2], lty=2, lwd=0.5,color='green')
#set up coordinates for example trees#
mx=max(dat$mb[dat$CHROM=='chrXII'])#
Y1=c(0,0,1,1)#
Y2=c(0.05,0.05,0.95,0.95)#
labY = c(0.15,0.15,0.85,0.85)#
labX = c(0.8, 2, 6.6, 14.7)/mx#
lefts = c(1.1, 2, 6.6, 14.7)/mx#
rights = c(1.2, 2.1, 6.7, 14.8)/mx#
tlabs = c("B", "C", "D", "E")#
tree.segs = data.frame(x1=lefts, x2=rights, y1=Y2, y2=Y2, tlab=tlabs, labY=labY, labX=labX)#
# bm = bm + geom_segment(data=tree.segs, aes(x = x1, y = y1, xend = x2, yend = y2), lwd=4) +#
	# geom_text(data=tree.segs, aes(x = labX, y = labY, xend = x2, yend = labY, label=tlab), size=5)#
plot(bm)
library(ggplot2)#
library(cowplot)#
setwd("~/gitreps/pungitius_sex_chromosome/figure_plotting")#
source('~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R')#
#------------ plot gene tree figure ------------##
#
#PLOT SDR-LIKE BOOLEAN DATA#
ll=load("pun_Ylike.Rdata");SEX.CHROM = 'chrXII' #set this up with chrom_window_figuresV4_wrapped.R#
dat$mb = dat$BIN_START / 1e6#
bm = sdr_normalized(df=dat, xcol='norm.x', ycol='SDRbool', sex.chrom= SEX.CHROM, YLAB="Y-consistent", sex.col ='black', other.col ='grey',LWD=0.5,PT.SIZE = 2, SHAPE=3, SPAN=.2, draw.legend=T)#
tot.length = max(dat[dat$CHROM=='chrXII','mb'])
head(dat)
unique(dat$sexCon)
dat$m.sdrBool = dat$sexCon - 1
rm(list=ls())
#examine phylogenetic results looking gene trees consistent with sex chromosomes#
#
setwd("~/gitreps/pungitius_sex_chromosome/gene_trees/pre_Y_inference/")#
source("~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R")#
#
#MAKE SELECTIONS FOR WHICH SPECIES/SEX TO ANALYZE#
#
#pick the sex (male means looking for Ys, female for Ws)#
sex='female'#
sex='male'#
#
#pick the species you want to look at#
spp = 'po'#
spp = 'tym'#
spp = 'sin'#
spp = 'pun'#
#
#set up name#
infile = paste(paste(spp, sex, sep="_"), 'allBiggestMonoRes.tsv', sep="_")#
print(infile)#
#
#read in data#
dat = read.table(infile, header = T)#
head(dat)#
#
#add normalized X values#
#
ll=load("~/gitreps/pungitius_sex_chromosome/metadata/chromList.Rdata")#
head(dat)#
dat$norm.x = dat$BIN_START#
for (chr in chromlist){#
	len = max(dat$BIN_START[dat$CHROM==chr])#
	dat$norm.x[dat$CHROM==chr]<-dat$BIN_START[dat$CHROM==chr] / len#
}#
head(dat)#
#
#add numerics for sex chromosome consistent#
dat$sexCon = as.numeric(dat$SDRbool) - 1
#SAVE THE RESULTS FOR PLOTTING MAIN FIGURE#
outName = '~/gitreps/pungitius_sex_chromosome/figure_plotting/pun_Ylike.Rdata'#
if (spp=='pun'){#
	save(dat, file=outName)#
}
rm(list=ls())
#plot_fig2.R#
#plot the Y-consistent gene trees figure#
#
library(ggplot2)#
library(cowplot)#
setwd("~/gitreps/pungitius_sex_chromosome/figure_plotting")#
source('~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R')#
#------------ plot gene tree figure ------------##
#
#PLOT SDR-LIKE BOOLEAN DATA#
ll=load("pun_Ylike.Rdata");SEX.CHROM = 'chrXII' #set this up with chrom_window_figuresV4_wrapped.R#
dat$mb = dat$BIN_START / 1e6#
bm = sdr_normalized(df=dat, xcol='norm.x', ycol='SDRbool', sex.chrom= SEX.CHROM, YLAB="Y-consistent", sex.col ='black', other.col ='grey',LWD=0.5,PT.SIZE = 2, SHAPE=3, SPAN=.2, draw.legend=T)#
tot.length = max(dat[dat$CHROM=='chrXII','mb'])
head(dat)
bm = sdr_normalized(df=dat, xcol='norm.x', ycol='sexCon', sex.chrom= SEX.CHROM, YLAB="Y-consistent", sex.col ='black', other.col ='grey',LWD=0.5,PT.SIZE = 2, SHAPE=3, SPAN=.2, draw.legend=T)
#add breaktpoints#
norm.breaks = c(3.5, 18.9) / tot.length#
bm=bm + geom_vline(xintercept= norm.breaks[1], lty=2, lwd=0.5, color='green') + #
	geom_vline(xintercept= norm.breaks[2], lty=2, lwd=0.5,color='green')
#set up coordinates for example trees#
mx=max(dat$mb[dat$CHROM=='chrXII'])#
Y1=c(0,0,1,1)#
Y2=c(0.05,0.05,0.95,0.95)#
labY = c(0.15,0.15,0.85,0.85)#
labX = c(0.8, 2, 6.6, 14.7)/mx#
lefts = c(1.1, 2, 6.6, 14.7)/mx#
rights = c(1.2, 2.1, 6.7, 14.8)/mx#
tlabs = c("B", "C", "D", "E")#
tree.segs = data.frame(x1=lefts, x2=rights, y1=Y2, y2=Y2, tlab=tlabs, labY=labY, labX=labX)#
# bm = bm + geom_segment(data=tree.segs, aes(x = x1, y = y1, xend = x2, yend = y2), lwd=4) +#
	# geom_text(data=tree.segs, aes(x = labX, y = labY, xend = x2, yend = labY, label=tlab), size=5)#
plot(bm)
head(dat)
plot(dat$sexCon~dat$mb)
plot(dat$sexCon~dat$norm.x)
max(norm.x)
max(dat$norm.x)
rm(list=ls())
#y_consistent_trees.R#
#examine phylogenetic results looking gene trees consistent with sex chromosomes#
#
setwd("~/gitreps/pungitius_sex_chromosome/gene_trees/pre_Y_inference/")#
source("~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R")#
#
#MAKE SELECTIONS FOR WHICH SPECIES/SEX TO ANALYZE#
#
#pick the sex (male means looking for Ys, female for Ws)#
sex='female'#
sex='male'#
#
#pick the species you want to look at#
spp = 'po'#
spp = 'tym'#
spp = 'sin'#
spp = 'pun'#
#
#set up name#
infile = paste(paste(spp, sex, sep="_"), 'allBiggestMonoRes.tsv', sep="_")#
print(infile)#
#
#read in data#
dat = read.table(infile, header = T)#
head(dat)#
#
#add normalized X values
ll=load("~/gitreps/pungitius_sex_chromosome/metadata/chromList.Rdata")#
head(dat)#
dat$norm.x = dat$BIN_START
unique(dat$CHROM)
dat = dat[!dat$CHROM %in% c("chrM", "chrUn")]
rm(list=ls())
#examine phylogenetic results looking gene trees consistent with sex chromosomes#
#
setwd("~/gitreps/pungitius_sex_chromosome/gene_trees/pre_Y_inference/")#
source("~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R")#
#
#MAKE SELECTIONS FOR WHICH SPECIES/SEX TO ANALYZE#
#
#pick the sex (male means looking for Ys, female for Ws)#
sex='female'#
sex='male'#
#
#pick the species you want to look at#
spp = 'po'#
spp = 'tym'#
spp = 'sin'#
spp = 'pun'#
#
#set up name#
infile = paste(paste(spp, sex, sep="_"), 'allBiggestMonoRes.tsv', sep="_")#
print(infile)#
#
#read in data#
dat = read.table(infile, header = T, stringsAsFactors=F)#
dat = dat[!dat$CHROM %in% c("chrM", "chrUn"),]#
head(dat)#
#
#add normalized X values#
#
ll=load("~/gitreps/pungitius_sex_chromosome/metadata/chromList.Rdata")#
head(dat)#
dat$norm.x = dat$BIN_START#
for (chr in chromlist){#
	len = max(dat$BIN_START[dat$CHROM==chr])#
	dat$norm.x[dat$CHROM==chr]<-dat$BIN_START[dat$CHROM==chr] / len#
}#
head(dat)#
#
#add numerics for sex chromosome consistent#
dat$sexCon = as.numeric(dat$SDRbool) - 1
head(dat)
dat$sexCon = as.numeric(dat$SDRbool)
head(SDRbool)
sexCon = dat$SDRbool
#add numerics for sex chromosome consistent#
sexCon = dat$SDRbool#
sexCon[sexCon=='False']<-0#
sexCon[sexCon=='True']<-1
#--------------- plot multipanel scatterplots ---------------##
x=dat$BIN_START#
dat$BIN_START = x/1e6#
CUT = 0.99#
plot_multipanel_chroms(df0=dat, chromlist=chromlist, xcol='BIN_START', ycol='biggestMonoPhyletic', float= CUT, xlab="Position", ylab='Density Male-specific')
plot_multipanel_chroms(df0=dat, chromlist=chromlist, xcol='BIN_START', ycol='sexCon', float= CUT, xlab="Position", ylab='Density Male-specific')
dat$sexCon = sexCon
plot_multipanel_chroms(df0=dat, chromlist=chromlist, xcol='BIN_START', ycol='sexCon', float= CUT, xlab="Position", ylab='Density Male-specific')
head(dat)
plot_multipanel_chroms(df0=dat, chromlist=chromlist, xcol='BIN_START', ycol='sexCon', float= CUT, xlab="Position", ylab='Density Male-specific')
dat$sexCon = as.numeric(sexCon)
plot_multipanel_chroms(df0=dat, chromlist=chromlist, xcol='BIN_START', ycol='sexCon', float= CUT, xlab="Position", ylab='Density Male-specific')
#SAVE THE RESULTS FOR PLOTTING MAIN FIGURE#
outName = '~/gitreps/pungitius_sex_chromosome/figure_plotting/pun_Ylike.Rdata'#
if (spp=='pun'){#
	save(dat, file=outName)#
}
rm(list=ls())
#plot the Y-consistent gene trees figure#
#
library(ggplot2)#
library(cowplot)#
setwd("~/gitreps/pungitius_sex_chromosome/figure_plotting")#
source('~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R')#
#------------ plot gene tree figure ------------##
#
#PLOT SDR-LIKE BOOLEAN DATA#
ll=load("pun_Ylike.Rdata");SEX.CHROM = 'chrXII' #set this up with chrom_window_figuresV4_wrapped.R#
dat$mb = dat$BIN_START / 1e6
bm = sdr_normalized(df=dat, xcol='norm.x', ycol='sexCon', sex.chrom= SEX.CHROM, YLAB="Y-consistent", sex.col ='black', other.col ='grey',LWD=0.5,PT.SIZE = 2, SHAPE=3, SPAN=.2, draw.legend=T)#
tot.length = max(dat[dat$CHROM=='chrXII','mb'])
#add breaktpoints#
norm.breaks = c(3.5, 18.9) / tot.length#
bm=bm + geom_vline(xintercept= norm.breaks[1], lty=2, lwd=0.5, color='green') + #
	geom_vline(xintercept= norm.breaks[2], lty=2, lwd=0.5,color='green')#
#set up coordinates for example trees#
mx=max(dat$mb[dat$CHROM=='chrXII'])#
Y1=c(0,0,1,1)#
Y2=c(0.05,0.05,0.95,0.95)#
labY = c(0.15,0.15,0.85,0.85)#
labX = c(0.8, 2, 6.6, 14.7)/mx#
lefts = c(1.1, 2, 6.6, 14.7)/mx#
rights = c(1.2, 2.1, 6.7, 14.8)/mx#
tlabs = c("B", "C", "D", "E")#
tree.segs = data.frame(x1=lefts, x2=rights, y1=Y2, y2=Y2, tlab=tlabs, labY=labY, labX=labX)#
# bm = bm + geom_segment(data=tree.segs, aes(x = x1, y = y1, xend = x2, yend = y2), lwd=4) +#
	# geom_text(data=tree.segs, aes(x = labX, y = labY, xend = x2, yend = labY, label=tlab), size=5)#
plot(bm)
rm(list=ls())
#examine phylogenetic results looking gene trees consistent with sex chromosomes#
#
setwd("~/gitreps/pungitius_sex_chromosome/gene_trees/pre_Y_inference/")#
source("~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R")#
#
#MAKE SELECTIONS FOR WHICH SPECIES/SEX TO ANALYZE#
#
#pick the sex (male means looking for Ys, female for Ws)#
sex='female'#
sex='male'#
#
#pick the species you want to look at#
spp = 'po'#
spp = 'tym'#
spp = 'sin'#
spp = 'pun'#
#
#set up name#
infile = paste(paste(spp, sex, sep="_"), 'allBiggestMonoRes.tsv', sep="_")#
print(infile)#
#
#read in data#
dat = read.table(infile, header = T, stringsAsFactors=F)#
dat = dat[!dat$CHROM %in% c("chrM", "chrUn"),]#
head(dat)#
#
#add normalized X values#
#
ll=load("~/gitreps/pungitius_sex_chromosome/metadata/chromList.Rdata")#
head(dat)
dat$norm.x = dat$BIN_START#
for (chr in chromlist){#
	len = max(dat$BIN_START[dat$CHROM==chr])#
	dat$norm.x[dat$CHROM==chr]<-dat$BIN_START[dat$CHROM==chr] / len#
}#
head(dat)
hist(dat$norm.x)
#add numerics for sex chromosome consistent#
sexCon = dat$SDRbool#
sexCon[sexCon=='False']<-0#
sexCon[sexCon=='True']<-1#
dat$sexCon = as.numeric(sexCon)#
#
#--------------- plot multipanel scatterplots ---------------##
x=dat$BIN_START#
dat$BIN_START = x/1e6#
CUT = 0.99#
plot_multipanel_chroms(df0=dat, chromlist=chromlist, xcol='BIN_START', ycol='biggestMonoPhyletic', float= CUT, xlab="Position", ylab='Density Male-specific')#
plot_multipanel_chroms(df0=dat, chromlist=chromlist, xcol='BIN_START', ycol='sexCon', float= CUT, xlab="Position", ylab='Density Male-specific')#
#SAVE THE RESULTS FOR PLOTTING MAIN FIGURE#
outName = '~/gitreps/pungitius_sex_chromosome/figure_plotting/pun_Ylike.Rdata'#
if (spp=='pun'){#
	save(dat, file=outName)#
}
#plot the Y-consistent gene trees figure#
#
library(ggplot2)#
library(cowplot)#
setwd("~/gitreps/pungitius_sex_chromosome/figure_plotting")#
source('~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R')#
#------------ plot gene tree figure ------------##
#
#PLOT SDR-LIKE BOOLEAN DATA#
ll=load("pun_Ylike.Rdata");SEX.CHROM = 'chrXII' #set this up with chrom_window_figuresV4_wrapped.R#
dat$mb = dat$BIN_START / 1e6
head(dat)
max(dat$norm.x)
bm = sdr_normalized(df=dat, xcol='norm.x', ycol='sexCon', sex.chrom= SEX.CHROM, YLAB="Y-consistent", sex.col ='black', other.col ='grey',LWD=0.5,PT.SIZE = 2, SHAPE=3, SPAN=.2, draw.legend=T)
tot.length = max(dat[dat$CHROM=='chrXII','mb'])
tot.length
max(dat$mb)
dat$mb = dat$BIN_START / 1e6
max(dat$mb)
max(dat$BIN_START)
#examine phylogenetic results looking gene trees consistent with sex chromosomes#
#
setwd("~/gitreps/pungitius_sex_chromosome/gene_trees/pre_Y_inference/")#
source("~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R")#
#
#MAKE SELECTIONS FOR WHICH SPECIES/SEX TO ANALYZE#
#
#pick the sex (male means looking for Ys, female for Ws)#
sex='female'#
sex='male'#
#
#pick the species you want to look at#
spp = 'po'#
spp = 'tym'#
spp = 'sin'#
spp = 'pun'#
#
#set up name#
infile = paste(paste(spp, sex, sep="_"), 'allBiggestMonoRes.tsv', sep="_")#
print(infile)#
#
#read in data#
dat = read.table(infile, header = T, stringsAsFactors=F)#
dat = dat[!dat$CHROM %in% c("chrM", "chrUn"),]#
head(dat)
#add normalized X values#
#
ll=load("~/gitreps/pungitius_sex_chromosome/metadata/chromList.Rdata")#
head(dat)#
dat$norm.x = dat$BIN_START#
for (chr in chromlist){#
	len = max(dat$BIN_START[dat$CHROM==chr])#
	dat$norm.x[dat$CHROM==chr]<-dat$BIN_START[dat$CHROM==chr] / len#
}#
head(dat)
#--------------- plot multipanel scatterplots ---------------##
x=dat$BIN_START#
dat$mb = x/1e6#
CUT = 0.99#
plot_multipanel_chroms(df0=dat, chromlist=chromlist, xcol='mb', ycol='biggestMonoPhyletic', float= CUT, xlab="Position", ylab='Density Male-specific')
rm(list=ls())
#y_consistent_trees.R#
#examine phylogenetic results looking gene trees consistent with sex chromosomes#
#
setwd("~/gitreps/pungitius_sex_chromosome/gene_trees/pre_Y_inference/")#
source("~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R")#
#
#MAKE SELECTIONS FOR WHICH SPECIES/SEX TO ANALYZE#
#
#pick the sex (male means looking for Ys, female for Ws)#
sex='female'#
sex='male'#
#
#pick the species you want to look at#
spp = 'po'#
spp = 'tym'#
spp = 'sin'#
spp = 'pun'#
#
#set up name#
infile = paste(paste(spp, sex, sep="_"), 'allBiggestMonoRes.tsv', sep="_")#
print(infile)#
#
#read in data#
dat = read.table(infile, header = T, stringsAsFactors=F)#
dat = dat[!dat$CHROM %in% c("chrM", "chrUn"),]#
head(dat)#
#
#add normalized X values#
#
ll=load("~/gitreps/pungitius_sex_chromosome/metadata/chromList.Rdata")#
head(dat)#
dat$norm.x = dat$BIN_START#
for (chr in chromlist){#
	len = max(dat$BIN_START[dat$CHROM==chr])#
	dat$norm.x[dat$CHROM==chr]<-dat$BIN_START[dat$CHROM==chr] / len#
}#
head(dat)#
#
#add numerics for sex chromosome consistent#
sexCon = dat$SDRbool#
sexCon[sexCon=='False']<-0#
sexCon[sexCon=='True']<-1#
dat$sexCon = as.numeric(sexCon)#
#
#--------------- plot multipanel scatterplots ---------------##
x=dat$BIN_START#
dat$mb = x/1e6#
CUT = 0.99
#SAVE THE RESULTS FOR PLOTTING MAIN FIGURE#
outName = '~/gitreps/pungitius_sex_chromosome/figure_plotting/pun_Ylike.Rdata'#
if (spp=='pun'){#
	save(dat, file=outName)#
}
library(ggplot2)#
library(cowplot)#
setwd("~/gitreps/pungitius_sex_chromosome/figure_plotting")#
source('~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R')#
#------------ plot gene tree figure ------------##
#
#PLOT SDR-LIKE BOOLEAN DATA#
ll=load("pun_Ylike.Rdata");SEX.CHROM = 'chrXII' #set this up with chrom_window_figuresV4_wrapped.R#
dat$mb = dat$BIN_START / 1e6#
bm = sdr_normalized(df=dat, xcol='norm.x', ycol='sexCon', sex.chrom= SEX.CHROM, YLAB="Y-consistent", sex.col ='black', other.col ='grey',LWD=0.5,PT.SIZE = 2, SHAPE=3, SPAN=.2, draw.legend=T)#
tot.length = max(dat[dat$CHROM=='chrXII','mb'])#
#add breaktpoints#
norm.breaks = c(3.5, 18.9) / tot.length#
bm=bm + geom_vline(xintercept= norm.breaks[1], lty=2, lwd=0.5, color='green') + #
	geom_vline(xintercept= norm.breaks[2], lty=2, lwd=0.5,color='green')#
#set up coordinates for example trees#
mx=max(dat$mb[dat$CHROM=='chrXII'])#
Y1=c(0,0,1,1)#
Y2=c(0.05,0.05,0.95,0.95)#
labY = c(0.15,0.15,0.85,0.85)#
labX = c(0.8, 2, 6.6, 14.7)/mx#
lefts = c(1.1, 2, 6.6, 14.7)/mx#
rights = c(1.2, 2.1, 6.7, 14.8)/mx#
tlabs = c("B", "C", "D", "E")#
tree.segs = data.frame(x1=lefts, x2=rights, y1=Y2, y2=Y2, tlab=tlabs, labY=labY, labX=labX)#
# bm = bm + geom_segment(data=tree.segs, aes(x = x1, y = y1, xend = x2, yend = y2), lwd=4) +#
	# geom_text(data=tree.segs, aes(x = labX, y = labY, xend = x2, yend = labY, label=tlab), size=5)#
plot(bm)
rm(list=ls())
library(plotrix)#
library(ggplot2)#
library(gridExtra)#
library(cowplot)#
setwd("~/gitreps/pungitius_sex_chromosome/figure_plotting")#
source("~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R")
library(plotrix)#
library(ggplot2)#
library(gridExtra)#
library(cowplot)#
setwd("~/gitreps/pungitius_sex_chromosome/figure_plotting")#
source("~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R")#
#
#set some global variables#
sex.col = 'black'#
other.col = 'grey'#
XCOL = 'norm.x'#
SPAN=0.1#
CUT= 0.99#
#optionally don't set y limits#
fst.ylim = "none"#
r2.ylim = "none"#
ss.ylim = "none"#
dp.ylim = "none"#
#
#assign y limits#
fst.ylim = c(-.02, 0.3)#
r2.ylim = c(0, 0.8)#
ss.ylim = c(0, 85)#
pi.ylim = c(-0.5, 2.5)#
dp.ylim = c(-1,0.6)#
XLAB=bquote(Pos.~.(sex.chrom.name)~(Mb))#
XLAB=""
ll=load("po_assembledWindowStats.Rdata");SEX.CHROM = 'chrXIX'; sex.chrom.name="chr19";sex.specific = 'pctMaleSpecific'; specific.lab = '% Sex-Specific'
setwd("~/gitreps/pungitius_sex_chromosome/figure_plotting")
rm(list=ls())
#chrom_window_figures.R#
library(plotrix)#
library(ggplot2)#
library(gridExtra)#
library(cowplot)#
#
#set global variables for script#
setwd("~/gitreps/pungitius_sex_chromosome/male_female_comparisons")#
source("~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R")#
resDir = "dna_100Kb_window_results/"#
chromsToIgnore = c("chrUn", "chrM")#
male.color = 'dodgerblue'#
female.color = 'firebrick'#
#choose focal species#
spp="pun"#
spp="tym"#
spp="sin"#
spp="po"
#upload the VCF wrapper results#
wrapFile = paste(paste(resDir, spp, sep = ""), "allWindows.tsv", sep="_")#
dat = read.table(wrapFile, header=T, sep="\t", na.strings = c("NA", "no_snps_in_this_window"))#
dat=dat[!dat$CHROM %in% chromsToIgnore,]#
dat$mb = dat$BIN_START / 1e6#
head(dat)#
dim(dat)#
dat$chr_pos = paste(dat$CHROM, dat$BIN_START, sep="_")#
dat$mfPi = log( (dat$SNP_COUNT_male/dat$SNP_COUNT_female), 2)#
dat$fmPi = log( (dat$PI_female/dat$PI_male), 2)#
dat$mfDens = log( (dat$SNP_COUNT_male/dat$SNP_COUNT_female), 2)#
dat$fmDens = log( (dat$SNP_COUNT_female/dat$SNP_COUNT_male), 2)#
dat$pctFemaleSpecific = dat$pFemaleSpecific*100#
dat$pctMaleSpecific = dat$pMaleSpecific*100
#SET UP NUMBERED CHROMOSOMES#
chroms = unique(as.character(dat$CHROM))#
chroms = chroms[!chroms %in% c("chrM", "chrUn")]#
chroms = chroms[order(chroms)]#
nums = c(1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 19, 15, 16, 17, 18, 20, 21)#
cdat = data.frame(chroms, nums)#
cdat=cdat[order(cdat$nums),]#
print(cdat)#
chromlist = as.character(cdat$chroms)#
save(cdat, chromlist, file="~/gitreps/pungitius_sex_chromosome/metadata/chromList.Rdata")
#ADD NORMALIZED X VALUES#
head(dat)#
dat$norm.x = dat$BIN_START#
for (chr in chromlist){#
	len = max(dat$BIN_START[dat$CHROM==chr])#
	dat$norm.x[dat$CHROM==chr]<-dat$BIN_START[dat$CHROM==chr] / len#
}#
head(dat)
#UPLOAD DEPTH RESULTS from bedtools_depth.R#
depthFile = paste(resDir, paste(spp, 'MvsF_foldDiff.Rdata', sep="_"), sep="")#
ll = load(depthFile)#
res.df$BIN_START = res.df$start + 1#
res.df$BIN_END = res.df$end#
res.df$chr_pos = paste(res.df$chr, res.df$BIN_START, sep="_")#
b=merge(res.df[,c('log2FoldChange', 'chr_pos')], dat, by = 'chr_pos', sort=T)#
dat=b#
colnames(dat)[2]<-'bedtoolDepth'
#save the formatted data for plotting main figure#
outDir= "~/gitreps/pungitius_sex_chromosome/figure_plotting/"#
outFile = paste(spp, "assembledWindowStats.Rdata", sep = "_")#
outName = paste(outDir, outFile, sep='')#
print(outName)
save(dat, file= outName)
#below are some plots just for reference#
#--------------- plot multipanel scatterplots ---------------##
x=dat$BIN_START#
dat$BIN_START = x/1e6#
CUT = 0.99#
plot_multipanel_chroms(df0=dat, chromlist=chromlist, xcol='BIN_START', ycol='pctMaleSpecific', float= CUT, xlab="Position", ylab='Density Male-specific')
rm(list=ls())
#plot the 100 Kb window stats for each species#
#
library(plotrix)#
library(ggplot2)#
library(gridExtra)#
library(cowplot)#
setwd("~/gitreps/pungitius_sex_chromosome/figure_plotting")#
source("~/gitreps/pungitius_sex_chromosome/pun_sex_chrom_functions.R")#
#
#set some global variables#
sex.col = 'black'#
other.col = 'grey'#
XCOL = 'norm.x'#
SPAN=0.1#
CUT= 0.99#
#
#optionally don't set y limits#
fst.ylim = "none"#
r2.ylim = "none"#
ss.ylim = "none"#
dp.ylim = "none"#
#
#assign y limits#
fst.ylim = c(-.02, 0.3)#
r2.ylim = c(0, 0.8)#
ss.ylim = c(0, 85)#
pi.ylim = c(-0.5, 2.5)#
dp.ylim = c(-1,0.6)
ll=load("po_assembledWindowStats.Rdata");SEX.CHROM = 'chrXIX'; sex.chrom.name="chr19";sex.specific = 'pctMaleSpecific'; specific.lab = '% Sex-Specific'
#set up 3-spine panels#
ll=load("po_assembledWindowStats.Rdata");SEX.CHROM = 'chrXIX'; sex.chrom.name="chr19";sex.specific = 'pctMaleSpecific'; specific.lab = '% Sex-Specific'#
# img1=ggdraw() + draw_image("datasets/pacific_ocean.pdf", scale = 0.9)#
fst1 = multichrom_len_normalized(df=dat, xcol= XCOL, ycol='MEAN_FST', sex.chrom=SEX.CHROM, YLAB='', XLAB= XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=fst.ylim, nox=T) #YLAB=bquote(Mean~F[ST])#
r21 = multichrom_len_normalized(df=dat, xcol= XCOL, ycol='male_r2', sex.chrom=SEX.CHROM, YLAB='', XLAB= XLAB,  sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=r2.ylim, nox=T)#
ss1 = multichrom_len_normalized(df=dat, xcol= XCOL, ycol= sex.specific, sex.chrom=SEX.CHROM, YLAB= '', XLAB= XLAB,  sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=ss.ylim, nox=T)#
H = get_two_tailed(dat[,'bedtoolDepth'], CUT)#
pi1 = multichrom_len_normalized(df=dat, xcol= XCOL, ycol='mfPi', sex.chrom= SEX.CHROM, YLAB='', XLAB= XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, , draw.line=F, tailed = 2, horiz=H, YLIM= pi.ylim, nox=F)#;plot(pi1)#
dp1 = multichrom_len_normalized(df=dat, xcol= XCOL, ycol='bedtoolDepth', sex.chrom= SEX.CHROM, YLAB='', XLAB= XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, , draw.line=F, tailed = 2, horiz=H, YLIM= dp.ylim, verticals=F);#plot(dp1)#
#
#set up pun panels#
ll=load("datasets/pun_assembledWindowStats.Rdata");SEX.CHROM = 'chrXII';sex.chrom.name='chr12'#
fst2 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='MEAN_FST', sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=fst.ylim, verticals=TRUE, nox=TRUE, noy=TRUE)#;plot(fst2)#
r22 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='male_r2', sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=r2.ylim, verticals=TRUE, nox=TRUE, noy=TRUE)#
ss2 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol= sex.specific, sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=ss.ylim, verticals=TRUE, nox=TRUE, noy=TRUE)#
pi2 = multichrom_len_normalized(df=dat, xcol= XCOL, ycol='mfPi', sex.chrom= SEX.CHROM, YLAB='', XLAB= XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, , draw.line=F, tailed = 2, horiz=H, YLIM= pi.ylim, verticals=TRUE, nox=F, noy=TRUE)#;plot(pi2)#
H = get_two_tailed(dat[,'bedtoolDepth'], CUT)#
dp2 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='bedtoolDepth', sex.chrom= SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, draw.line=F, tailed = 2, horiz=H, YLIM=dp.ylim, verticals=TRUE, noy=F)#;plot(dp2)#
#
#set up sin panels#
ll=load("datasets/sin_assembledWindowStats.Rdata")#;sex.specific = 'pctFemaleSpecific';specific.lab = '% Sex-Specific'#
fst3 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='MEAN_FST', sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=fst.ylim, nox=TRUE, noy=TRUE)#
r23 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='male_r2', sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=r2.ylim, nox=TRUE, noy=TRUE)#
ss3 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol= sex.specific, sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=ss.ylim, nox=TRUE, noy=TRUE);#plot(ss3)#
pi3 = multichrom_len_normalized(df=dat, xcol= XCOL, ycol='mfPi', sex.chrom= SEX.CHROM, YLAB='', XLAB= XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, , draw.line=F, tailed = 2, horiz=H, YLIM= pi.ylim, nox=F, noy=TRUE)#;plot(pi3)#
dp3 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='bedtoolDepth', sex.chrom= SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=dp.ylim, noy=T)#
#
#set up tym panels#
ll=load("datasets/tym_assembledWindowStats.Rdata")#
fst4 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='MEAN_FST', sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=fst.ylim, nox=TRUE, noy=TRUE)#
r24 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='male_r2', sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=r2.ylim, nox=TRUE, noy=TRUE)#
ss4 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol= sex.specific, sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=ss.ylim, nox=TRUE, noy=TRUE)#
pi4 = multichrom_len_normalized(df=dat, xcol= XCOL, ycol='mfPi', sex.chrom= SEX.CHROM, YLAB='', XLAB= XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, , draw.line=F, tailed = 2, horiz=H, YLIM= pi.ylim, nox=F, noy=TRUE)#;plot(pi4)#
dp4 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='bedtoolDepth', sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=dp.ylim, noy=TRUE)#
#Fst, sex-specific, and pi#
plot_grid(fst1,fst2,fst3,fst4,ss1,ss2,ss3,ss4,pi1,pi2,pi3,pi4, ncol=4, labels = '')
fst1 = multichrom_len_normalized(df=dat, xcol= XCOL, ycol='MEAN_FST', sex.chrom=SEX.CHROM, YLAB='', XLAB= XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=fst.ylim, nox=T) #YLAB=bquote(Mean~F[ST])
XLAB=bquote(Pos.~.(sex.chrom.name)~(Mb))
XLAB=bquote(Pos.~.(sex.chrom.name)~(Mb))
fst1 = multichrom_len_normalized(df=dat, xcol= XCOL, ycol='MEAN_FST', sex.chrom=SEX.CHROM, YLAB='', XLAB= XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=fst.ylim, nox=T) #YLAB=bquote(Mean~F[ST])
#set up 3-spine panels#
ll=load("po_assembledWindowStats.Rdata");SEX.CHROM = 'chrXIX'; sex.chrom.name="chr19";sex.specific = 'pctMaleSpecific'; specific.lab = '% Sex-Specific'#
# img1=ggdraw() + draw_image("datasets/pacific_ocean.pdf", scale = 0.9)#
fst1 = multichrom_len_normalized(df=dat, xcol= XCOL, ycol='MEAN_FST', sex.chrom=SEX.CHROM, YLAB='', XLAB= XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=fst.ylim, nox=T) #YLAB=bquote(Mean~F[ST])#
r21 = multichrom_len_normalized(df=dat, xcol= XCOL, ycol='male_r2', sex.chrom=SEX.CHROM, YLAB='', XLAB= XLAB,  sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=r2.ylim, nox=T)#
ss1 = multichrom_len_normalized(df=dat, xcol= XCOL, ycol= sex.specific, sex.chrom=SEX.CHROM, YLAB= '', XLAB= XLAB,  sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=ss.ylim, nox=T)#
H = get_two_tailed(dat[,'bedtoolDepth'], CUT)#
pi1 = multichrom_len_normalized(df=dat, xcol= XCOL, ycol='mfPi', sex.chrom= SEX.CHROM, YLAB='', XLAB= XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, , draw.line=F, tailed = 2, horiz=H, YLIM= pi.ylim, nox=F)#;plot(pi1)#
dp1 = multichrom_len_normalized(df=dat, xcol= XCOL, ycol='bedtoolDepth', sex.chrom= SEX.CHROM, YLAB='', XLAB= XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, , draw.line=F, tailed = 2, horiz=H, YLIM= dp.ylim, verticals=F);#plot(dp1)
#set up pun panels#
ll=load("datasets/pun_assembledWindowStats.Rdata");SEX.CHROM = 'chrXII';sex.chrom.name='chr12'#
fst2 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='MEAN_FST', sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=fst.ylim, verticals=TRUE, nox=TRUE, noy=TRUE)#;plot(fst2)#
r22 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='male_r2', sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=r2.ylim, verticals=TRUE, nox=TRUE, noy=TRUE)#
ss2 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol= sex.specific, sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=ss.ylim, verticals=TRUE, nox=TRUE, noy=TRUE)#
pi2 = multichrom_len_normalized(df=dat, xcol= XCOL, ycol='mfPi', sex.chrom= SEX.CHROM, YLAB='', XLAB= XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, , draw.line=F, tailed = 2, horiz=H, YLIM= pi.ylim, verticals=TRUE, nox=F, noy=TRUE)#;plot(pi2)#
H = get_two_tailed(dat[,'bedtoolDepth'], CUT)#
dp2 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='bedtoolDepth', sex.chrom= SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, draw.line=F, tailed = 2, horiz=H, YLIM=dp.ylim, verticals=TRUE, noy=F)#;plot(dp2)
ll=load("pun_assembledWindowStats.Rdata");SEX.CHROM = 'chrXII';sex.chrom.name='chr12'
#set up pun panels#
ll=load("pun_assembledWindowStats.Rdata");SEX.CHROM = 'chrXII';sex.chrom.name='chr12'#
fst2 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='MEAN_FST', sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=fst.ylim, verticals=TRUE, nox=TRUE, noy=TRUE)#;plot(fst2)#
r22 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='male_r2', sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=r2.ylim, verticals=TRUE, nox=TRUE, noy=TRUE)#
ss2 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol= sex.specific, sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=ss.ylim, verticals=TRUE, nox=TRUE, noy=TRUE)#
pi2 = multichrom_len_normalized(df=dat, xcol= XCOL, ycol='mfPi', sex.chrom= SEX.CHROM, YLAB='', XLAB= XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, , draw.line=F, tailed = 2, horiz=H, YLIM= pi.ylim, verticals=TRUE, nox=F, noy=TRUE)#;plot(pi2)#
H = get_two_tailed(dat[,'bedtoolDepth'], CUT)#
dp2 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='bedtoolDepth', sex.chrom= SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, draw.line=F, tailed = 2, horiz=H, YLIM=dp.ylim, verticals=TRUE, noy=F)#;plot(dp2)
#set up sin panels#
ll=load("sin_assembledWindowStats.Rdata")#;sex.specific = 'pctFemaleSpecific';specific.lab = '% Sex-Specific'#
fst3 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='MEAN_FST', sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=fst.ylim, nox=TRUE, noy=TRUE)#
r23 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='male_r2', sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=r2.ylim, nox=TRUE, noy=TRUE)#
ss3 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol= sex.specific, sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=ss.ylim, nox=TRUE, noy=TRUE);#plot(ss3)#
pi3 = multichrom_len_normalized(df=dat, xcol= XCOL, ycol='mfPi', sex.chrom= SEX.CHROM, YLAB='', XLAB= XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, , draw.line=F, tailed = 2, horiz=H, YLIM= pi.ylim, nox=F, noy=TRUE)#;plot(pi3)#
dp3 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='bedtoolDepth', sex.chrom= SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=dp.ylim, noy=T)
#set up tym panels#
ll=load("tym_assembledWindowStats.Rdata")#
fst4 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='MEAN_FST', sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=fst.ylim, nox=TRUE, noy=TRUE)#
r24 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='male_r2', sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=r2.ylim, nox=TRUE, noy=TRUE)#
ss4 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol= sex.specific, sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=ss.ylim, nox=TRUE, noy=TRUE)#
pi4 = multichrom_len_normalized(df=dat, xcol= XCOL, ycol='mfPi', sex.chrom= SEX.CHROM, YLAB='', XLAB= XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, , draw.line=F, tailed = 2, horiz=H, YLIM= pi.ylim, nox=F, noy=TRUE)#;plot(pi4)#
dp4 = multichrom_len_normalized(df=dat, xcol=XCOL, ycol='bedtoolDepth', sex.chrom=SEX.CHROM, YLAB='', XLAB=XLAB, sex.col = sex.col, other.col = other.col,SPAN=SPAN, YLIM=dp.ylim, noy=TRUE)
#Fst, sex-specific, and pi#
plot_grid(fst1,fst2,fst3,fst4,ss1,ss2,ss3,ss4,pi1,pi2,pi3,pi4, ncol=4, labels = '')
#plot depth for 3-spine and pungitius#
plot_grid(dp1, dp2)#
save(dp1, dp2, file="datasets/depthPlots.Rdata")
save(dp1, dp2, file="depthPlots.Rdata")
